package com.huatuo.customer.interceptor;

import java.io.PrintWriter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

import com.github.pagehelper.StringUtil;
import com.huatuo.customer.base.response.BaseResponse;
import com.huatuo.customer.base.util.Utils;
import com.huatuo.customer.config.SpringContextUtils;
import com.huatuo.customer.service.LoginService;
import com.huatuo.register.domain.response.LoginDataResponse;

/**
 * 登录拦截器
 * @author master
 *
 */
@Component
public class LoginInterceptor extends HandlerInterceptorAdapter {

	@Autowired
	private LoginService loginService;
	
//	private static final Logger logger = LoggerFactory.getLogger(LoginInterceptor.class);
	
	@Override		
	public void afterCompletion(HttpServletRequest request,
			HttpServletResponse response, Object object, Exception e)
			throws Exception {
	}

	@Override
	public void postHandle(HttpServletRequest request, HttpServletResponse response,
			Object object, ModelAndView modelAndView) throws Exception {
	}

	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response,
			Object object) throws Exception {
		String handleUri = request.getRequestURI();
		if(handleUri.equals("/order/payReturnInfoSend") || 
				handleUri.equals("/error")){
	        	return true;
	    }
		String token = Utils.getToken(request);
		if(StringUtil.isEmpty(token)){
			response.setCharacterEncoding("UTF-8");  
		    response.setContentType("application/json; charset=utf-8");
			PrintWriter out = response.getWriter();
	        out.print("{\"code\" : \""+ BaseResponse.LOGIN_OVER_TIME_CODE +"\", \"message\" : \""+ BaseResponse.LOGIN_OVER_TIME +"\"}");
			return false;
		}
		loginService = (LoginService) SpringContextUtils.getBean("loginServiceImpl");
		LoginDataResponse loginDataResponse = loginService.getUserInfoByLogin(token);
		if(loginDataResponse == null || loginDataResponse.getXtPerson() == null){
			response.setCharacterEncoding("UTF-8");  
		    response.setContentType("application/json; charset=utf-8");
			PrintWriter out = response.getWriter();
	        out.print("{\"code\" : \""+ BaseResponse.LOGIN_OVER_TIME_CODE +"\", \"message\" : \""+ BaseResponse.LOGIN_OVER_TIME +"\"}");
	        return false;
		}
		loginService.setUserInfoByLogin(token, loginDataResponse, LoginService.LOGIN_USER_CACHE_TIME);
		return true;
	}
}
