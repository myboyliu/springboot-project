<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huatuo.customer.dao.XtHealthCenterMapper" >
  <resultMap id="BaseResultMap" type="com.huatuo.customer.domain.XtHealthCenter" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="measuring_date" property="measuringDate" jdbcType="VARCHAR" />
    <result column="measuring_time" property="measuringTime" jdbcType="VARCHAR" />
    <result column="record_time" property="recordTime" jdbcType="VARCHAR" />
    <result column="measuring_value" property="measuringValue" jdbcType="DOUBLE" />
    <result column="diastolic_pressure" property="diastolicPressure" jdbcType="DOUBLE" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="family_id" property="familyId" jdbcType="VARCHAR" />
    <result column="health_status_id" property="healthStatusId" jdbcType="VARCHAR" />
    <result column="discomfort" property="discomfort" jdbcType="VARCHAR" />
    <result column="mark" property="mark" jdbcType="VARCHAR" />
    <result column="special_case" property="specialCase" jdbcType="VARCHAR" />
    
    <result column="health_status" property="healthStatus" jdbcType="VARCHAR" />
    <result column="prompt" property="prompt" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, type, measuring_date, measuring_time, record_time, measuring_value, diastolic_pressure, 
    user_id, family_id, health_status_id, discomfort, mark, special_case
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from xt_health_center
    where id = #{id}
  </select>
  
  <select id="selectXtHealthCenterList" resultType="com.huatuo.customer.domain.XtHealthCenter" parameterType="map" >
    select 
    c.id id, c.type type,c.measuring_date measuringDate, c.measuring_time measuringTime, c.record_time recordTime,
    c.measuring_value measuringValue, c.diastolic_pressure diastolicPressure, c.user_id userId, c.family_id familyId,
    c.health_status_id healthStatusId, c.discomfort discomfort,c.mark mark,s.preset_min presetMin,s.preset_max presetMax,
    s.bp_preset_min bpPresetMin,s.bp_preset_max bpPresetMax,s.health_status healthStatus,s.prompt prompt
    <if test="firstOfWeek!=null and lastOfWeek!=null"> <!--按周查出每天最高值和最低值  -->
      <if test="type!=3">
        ,max(c.measuring_value) maxMeaValue,min(c.measuring_value) minMeaValue
        ,max(c.diastolic_pressure) maxDiaValue,min(diastolic_pressure) minDiaValue
      </if>
      <if test="type==3">
        ,avg(c.measuring_value) avgMeaValue
      </if>
    </if>   
    <if test="measuringDate!=null"><!-- 区分体温（每天体温每小时的平均值）     -->
      <if test="type==3">
        ,avg(c.measuring_value) avgMeaValue
      </if>
      <if test="type==2"><!-- 区分心率（每天体温每小时的最大值跟最小值）     -->
        ,max(c.measuring_value) maxMeaValue,min(c.measuring_value) minMeaValue
      </if>     
    </if>
    <if test="firstOfMonth!=null and lastOfMonth!=null">    
        ,max(c.measuring_value) maxMeaValue,min(c.measuring_value) minMeaValue
        ,max(c.diastolic_pressure) maxDiaValue,min(diastolic_pressure) minDiaValue
    </if>
    from xt_health_center c
    left join xt_health_status s
    on s.id = c.health_status_id   
    where 1=1
    <if test="userId!=null">    
        and c.user_id = #{userId}
    </if>   
    <if test="type!=null">
        and c.type = #{type}
    </if>
    <if test="measuringDate!=null"><!-- 区分体温跟心率（体温取每个小时内所有数据的平均值，心率取跟小时最大跟最小的）     -->
      <if test="type==1 or type==4">
        and c.measuring_date = #{measuringDate}
      </if>
       <if test="type==2 or type==3">
        and c.measuring_date = #{measuringDate}
        group by HOUR(c.measuring_time)
      </if>
    </if>
    <if test="firstOfWeek!=null and lastOfWeek!=null">   
        and c.measuring_date between #{firstOfWeek} and #{lastOfWeek}
        group by DAY(c.measuring_date)
    </if>
    <if test="firstOfMonth!=null and lastOfMonth!=null">    
        and  c.measuring_date between #{firstOfMonth} and #{lastOfMonth}
    </if>
       order by c.record_time desc
  </select>
  
  <!--统计当前月各个类型测试总次数  -->
  <select id="countInMonth" resultType="com.huatuo.customer.domain.XtHealthCenterPojo" parameterType="map" >
    select count(*) count,s.health_status healthStatus
    from xt_health_center c
    left join xt_health_status s
    on s.id = c.health_status_id   
    where 1=1
    <if test="userId!=null">    
        and c.user_id = #{userId}
    </if>   
    <if test="type!=null">
        and c.type = #{type}
    </if>
    <if test="firstOfMonth!=null and lastOfMonth!=null">    
        and  c.measuring_date between #{firstOfMonth} and #{lastOfMonth}
    </if>
    GROUP BY
    s.health_status
  </select>
  

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from xt_health_center
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="com.huatuo.customer.domain.XtHealthCenter" >
    insert into xt_health_center (id, type, measuring_date, 
      measuring_time, record_time, measuring_value, 
      diastolic_pressure, user_id, family_id, 
      health_status_id, discomfort, mark, special_case
      )
    values (#{id}, #{type}, #{measuringDate}, 
      #{measuringTime}, #{recordTime}, #{measuringValue}, 
      #{diastolicPressure}, #{userId}, #{familyId}, 
      #{healthStatusId}, #{discomfort}, #{mark},
      #{specialCase}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.huatuo.customer.domain.XtHealthCenter" >
    insert into xt_health_center
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="measuringDate != null" >
        measuring_date,
      </if>
      <if test="measuringTime != null" >
        measuring_time,
      </if>
      <if test="recordTime != null" >
        record_time,
      </if>
      <if test="measuringValue != null" >
        measuring_value,
      </if>
      <if test="diastolicPressure != null" >
        diastolic_pressure,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="familyId != null" >
        family_id,
      </if>
      <if test="healthStatusId != null" >
        health_status_id,
      </if>
      <if test="discomfort != null" >
        discomfort,
      </if>
      <if test="mark != null" >
        mark,
      </if>
      <if test="specialCase != null" >
        special_case,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id},
      </if>
      <if test="type != null" >
        #{type},
      </if>
      <if test="measuringDate != null" >
        #{measuringDate},
      </if>
      <if test="measuringTime != null" >
        #{measuringTime},
      </if>
      <if test="recordTime != null" >
        #{recordTime},
      </if>
      <if test="measuringValue != null" >
        #{measuringValue},
      </if>
      <if test="diastolicPressure != null" >
        #{diastolicPressure},
      </if>
      <if test="userId != null" >
        #{userId},
      </if>
      <if test="familyId != null" >
        #{familyId},
      </if>
      <if test="healthStatusId != null" >
        #{healthStatusId},
      </if>
      <if test="discomfort != null" >
        #{discomfort},
      </if>
      <if test="mark != null" >
        #{mark},
      </if>
      <if test="specialCase != null" >
        #{specialCase},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.huatuo.customer.domain.XtHealthCenter" >
    update xt_health_center
    <set >
      <if test="type != null" >
        type = #{type},
      </if>
      <if test="measuringDate != null" >
        measuring_date = #{measuringDate},
      </if>
      <if test="measuringTime != null" >
        measuring_time = #{measuringTime},
      </if>
      <if test="recordTime != null" >
        record_time = #{recordTime},
      </if>
      <if test="measuringValue != null" >
        measuring_value = #{measuringValue},
      </if>
      <if test="diastolicPressure != null" >
        diastolic_pressure = #{diastolicPressure},
      </if>
      <if test="userId != null" >
        user_id = #{userId},
      </if>
      <if test="familyId != null" >
        family_id = #{familyId},
      </if>
      <if test="healthStatusId != null" >
        health_status_id = #{healthStatusId},
      </if>
      <if test="discomfort != null" >
        discomfort = #{discomfort},
      </if>
      <if test="mark != null" >
        mark = #{mark},
      </if>
      <if test="specialCase != null" >
        special_case = #{specialCase},
      </if>
    </set>
    where id = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huatuo.customer.domain.XtHealthCenter" >
    update xt_health_center
    set type = #{type},
      measuring_date = #{measuringDate},
      measuring_time = #{measuringTime},
      record_time = #{recordTime},
      measuring_value = #{measuringValue},
      diastolic_pressure = #{diastolicPressure},
      user_id = #{userId},
      family_id = #{familyId},
      health_status_id = #{healthStatusId},
      discomfort = #{discomfort},
      mark = #{mark},
      special_case = #{specialCase}
    where id = #{id}
  </update>	
	<!-- 查询历史记录条件sql -->
	<sql id="condition_sql">
		from xt_health_center hc
		left join xt_health_status hs on hc.health_status_id = hs.id
		left join xt_person_family pf on hc.family_id = pf.id
		where hc.user_id = #{userId} 
			and hc.type = #{type} 
			<if test="starttime != null and starttime != '' and endtime != null and endtime != ''">
				and hc.measuring_date between #{starttime} and #{endtime}
			</if>
			<if test="measuringDate != null and measuringDate != ''">
				and hc.measuring_date = #{measuringDate}
			</if>
			<if test="familyId != null and familyId != ''">
				and hc.family_id = #{familyId}
			</if>
			<if test="familyId == null or familyId == ''">
				and (hc.family_id is null or hc.family_id = '')
			</if>
	</sql>
	
	<!-- 历史记录列 -->
	<sql id="history_column">
		hc.id id, hc.type type, hc.measuring_date measuringDate, 
		hc.measuring_time measuringTime, hc.record_time recordTime, 
		hc.measuring_value measuringValue, hc.diastolic_pressure diastolicPressure, 
		hc.discomfort discomfort, hc.mark mark, hs.health_status healthStatus, 
		hs.prompt prompt, pf.name `name`
	</sql>

	<insert id="save" parameterType="com.huatuo.customer.domain.XtHealthCenter">
		insert into xt_health_center
		(
			id, type, measuring_date, measuring_time, record_time, 
			measuring_value, diastolic_pressure, user_id, family_id,
			health_status_id, discomfort, mark, special_case, xinlv
		)
		values 
		(
			#{id}, #{type}, #{measuringDate}, #{measuringTime}, 
			#{recordTime}, #{measuringValue}, #{diastolicPressure}, 
			#{userId}, #{familyId}, #{healthStatusId}, #{discomfort}, 
			#{mark}, #{specialCase}, #{xinlv}
		)
	</insert>
	
	<!-- 查询当天血糖测量过的时间 -->
	<select id="getBsRecord" parameterType="com.huatuo.customer.query.HealthCenterQuery" resultType="string">
		select distinct hc.measuring_time <include refid="condition_sql"/>
	</select>
	
	<!-- 获取历史记录中的测量次数 -->
	<select id="getStatistics" parameterType="com.huatuo.customer.query.HealthCenterQuery" resultType="map">
		select hs.health_status healthStatus, count(hs.health_status) `count`
		<include refid="condition_sql"/>
		group by hs.health_status
		order by hs.sort_id
	</select>
	
	<!-- 统计历史记录条数 -->
	<select id="countHistory" parameterType="com.huatuo.customer.query.HealthCenterQuery" resultType="int">
		select count(hc.id) <include refid="condition_sql"/>
	</select>
	
	<!-- 获取历史记录 -->
	<select id="getHistory" parameterType="com.huatuo.customer.query.HealthCenterQuery" resultType="com.huatuo.customer.domain.XtHealthCenterHistory">
		select <include refid="history_column"/>
		<include refid="condition_sql"/>
		<!-- 血压、心率、体温按照记录时间排序 -->
		<if test="type != 4">
			order by hc.measuring_date desc, hc.measuring_time desc
		</if>
		<!-- 血糖按照录入时间排序 -->
		<if test="type == 4">
			order by hc.record_time desc
		</if>
		limit #{start}, #{pageSize}
	</select>
</mapper>